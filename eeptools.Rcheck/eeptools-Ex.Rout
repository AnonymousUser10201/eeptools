
R version 2.15.1 (2012-06-22) -- "Roasted Marshmallows"
Copyright (C) 2012 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-pc-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "eeptools"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> options(pager = "console")
> library('eeptools')
Loading required package: stringr
Loading required package: ggplot2
Loading required package: plyr
Loading required package: proto
Loading required package: grid
 eeptools for R version 0.1
 Free and Open Software for Education Evaluation
Developed by Jared E. Knowles 2012
 For The Wisconsin Department of Public Instruction
 Distributed without warranty
> 
> assign(".oldSearch", search(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("autoplot.lm")
> ### * autoplot.lm
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: autoplot.lm
> ### Title: A function to replicate the basic plot function for linear
> ###   models in ggplot2
> ### Aliases: autoplot.lm
> 
> ### ** Examples
> 
> 
> # Univariate
> a<-runif(1000)
> b<-7*a+rnorm(1)
> mymod<-lm(b~a)
> autoplot(mymod)
Error : mgcv package required for this functionality.  Please install and try again.
Error : mgcv package required for this functionality.  Please install and try again.
Error : mgcv package required for this functionality.  Please install and try again.
Error : mgcv package required for this functionality.  Please install and try again.
> 
> # Multivariate
> 
> data(mpg)
> mymod<-lm(cty~displ+cyl+drv,data=mpg)
> autoplot(mymod)
geom_smooth: method="auto" and size of largest group is <1000, so using loess. Use 'method = x' to change the smoothing method.
geom_smooth: method="auto" and size of largest group is <1000, so using loess. Use 'method = x' to change the smoothing method.
geom_smooth: method="auto" and size of largest group is <1000, so using loess. Use 'method = x' to change the smoothing method.
geom_smooth: method="auto" and size of largest group is <1000, so using loess. Use 'method = x' to change the smoothing method.
> 
> 
> 
> cleanEx()
> nameEx("cutoff")
> ### * cutoff
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: cutoff
> ### Title: function to calculate thresholds in a vector
> ### Aliases: cutoff
> ### Keywords: ~manip ~kwd2
> 
> ### ** Examples
> 
> # for vector
> a<-rnorm(100,mean=6,sd=1)
> cutoff(a,.7) #return minimum number of elements to account 70 percent of total
[1] 64
> 
> ## The function is currently defined as
> function (x, cutoff) 
+ {
+     x <- x[order(-x)]
+     xb <- cumsum(x)
+     xc <- xb/sum(x, na.rm = T)
+     length(xc[xc < cutoff])
+   }
function (x, cutoff) 
{
    x <- x[order(-x)]
    xb <- cumsum(x)
    xc <- xb/sum(x, na.rm = T)
    length(xc[xc < cutoff])
}
> 
> 
> 
> cleanEx()
> nameEx("defac")
> ### * defac
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: defac
> ### Title: convert a factor to a character string safely
> ### Aliases: defac
> 
> ### ** Examples
> 
> a<-as.factor(LETTERS)
> summary(a)
A B C D E F G H I J K L M N O P Q R S T U V W X Y Z 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
> b<-defac(a)
> class(b)
[1] "character"
> 
> ## The function is currently defined as
> function (x) 
+ {
+     x <- as.character(x)
+     x
+   }
function (x) 
{
    x <- as.character(x)
    x
}
> 
> 
> 
> cleanEx()
> nameEx("destring")
> ### * destring
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: destring
> ### Title: a function to convert numeric factors into numeric class objects
> ### Aliases: destring
> 
> ### ** Examples
> 
> 
> a<-ordered(c(1,3,'09',7,5))
> b<-destring(a)
> class(b)
[1] "numeric"
> b
[1] 1 3 9 7 5
> a
[1] 1  3  09 7  5 
Levels: 09 < 1 < 3 < 5 < 7
> 
> ## The function is currently defined as
> function (x) 
+ {
+     x <- as.character(x)
+     x <- as.numeric(x)
+     x
+   }
function (x) 
{
    x <- as.character(x)
    x <- as.numeric(x)
    x
}
> 
> 
> 
> cleanEx()
> nameEx("dropbox_source")
> ### * dropbox_source
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: dropbox_source
> ### Title: A function to source R scripts from Dropbox public shares
> ### Aliases: dropbox_source
> ### Keywords: ~utilities
> 
> ### ** Examples
> 
> 
> # Not run
> # dropbox_source("https://dropbox.com/public/somekey/cooldata.csv")
> 
> 
> 
> cleanEx()
> nameEx("eeptools-package")
> ### * eeptools-package
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: eeptools-package
> ### Title: Convenience functions
> ### Aliases: eeptools-package eeptools
> ### Keywords: package
> 
> ### ** Examples
> 
> # Some examples later
> 
> 
> 
> cleanEx()
> nameEx("max_mis")
> ### * max_mis
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: max_mis
> ### Title: A function to safely take the maximum of a vector that could
> ###   include only NAs.
> ### Aliases: max_mis
> ### Keywords: ~kwd1 ~kwd2
> 
> ### ** Examples
> 
> 
> max(c(7,NA,3,2,0),na.rm=TRUE)
[1] 7
> max_mis(c(7,NA,3,2,0))
[1] 7
> max(c(NA,NA,NA,NA),na.rm=TRUE)
Warning in max(c(NA, NA, NA, NA), na.rm = TRUE) :
  no non-missing arguments to max; returning -Inf
[1] -Inf
> max_mis(c(NA,NA,NA,NA))
[1] NA
> 
> 
> 
> 
> cleanEx()
> nameEx("midsch")
> ### * midsch
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: midsch
> ### Title: A dataframe of aggregate test scores for schools in a Midwest
> ###   state.
> ### Aliases: midsch
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(midsch)
> 
> 
> 
> 
> cleanEx()
> nameEx("remove_stars")
> ### * remove_stars
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: remove_stars
> ### Title: Function to replace a "*" in redcated data with an NA in R
> ### Aliases: remove_stars
> ### Keywords: ~manip
> 
> ### ** Examples
> 
> a<-c(1,5,3,6,"*",2,5,"*","*")
> b<-remove_stars(a)
> is.numeric(b)
[1] TRUE
> 
> 
> 
> cleanEx()
> nameEx("statamode")
> ### * statamode
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: statamode
> ### Title: to mimic the mode function in Stata.
> ### Aliases: statamode
> ### Keywords: ~manip
> 
> ### ** Examples
> 
> # for vectors
> a<-c(month.name,month.name)
> statamode(a) # returns "." to show no unique mode; useful for ddply
[1] "."
> a<-c(LETTERS,"A","A")
> statamode(a)
[1] "A"
> 
> 
> 
> 
> cleanEx()
> nameEx("stuatt")
> ### * stuatt
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: stuatt
> ### Title: Student Attributes from the Strategic Data Project Toolkit
> ### Aliases: stuatt
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(stuatt)
> ## maybe str(stuatt) ; plot(stuatt) ...
> 
> 
> 
> cleanEx()
> nameEx("stulevel")
> ### * stulevel
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: stulevel
> ### Title: A synthetic data set of K-12 student attributes.
> ### Aliases: stulevel
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(stulevel)
> ## maybe str(stulevel) ; plot(stulevel) ...
> 
> 
> 
> cleanEx()
> nameEx("theme_dpi")
> ### * theme_dpi
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: theme_dpi
> ### Title: a ggplot2 theme developed for PDF and PNG
> ### Aliases: theme_dpi
> ### Keywords: ~aplot ~misc
> 
> ### ** Examples
> 
> qplot(mpg, wt, data=mtcars) # standard
> qplot(mpg, wt, data=mtcars) + theme_dpi()
> 
> 
> 
> cleanEx()
> nameEx("theme_dpi_map")
> ### * theme_dpi_map
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: theme_dpi_map
> ### Title: a ggplot2 theme developed for PDF or SVG maps
> ### Aliases: theme_dpi_map
> ### Keywords: ~aplot ~misc
> 
> ### ** Examples
> 
> 
> # Data
> crimes <- data.frame(state = tolower(rownames(USArrests)), USArrests)
> require(reshape2) # for melt
Loading required package: reshape2
> crimesm <- melt(crimes, id = 1)
> 
> # No DPI theme
> states_map <- map_data("state")
Error: maps package required for this functionality.  Please install and try again.
Execution halted
